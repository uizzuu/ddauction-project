version: '3.9'
services:
  db:
    image: mysql:8.0
    container_name: db
    env_file:
      - .env.local
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - "3307:3306"
    volumes:
      - dbdata:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 10

  backend:
    build: ../backend
    container_name: backend
    env_file:
      - .env.local
    environment:
      SPRING_PROFILES_ACTIVE: local
      # 컨테이너 간 통신을 위한 DB URL
      DB_URL: jdbc:mysql://db:3306/${MYSQL_DATABASE}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
      DB_USERNAME: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}
      # JWT
      JWT_SECRET: ${JWT_SECRET}
      # CORS
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
      # 결제
      PAYMENT_PORTONE_IMP_CODE: ${PAYMENT_PORTONE_IMP_CODE}
      PAYMENT_PORTONE_API_KEY: ${PAYMENT_PORTONE_API_KEY}
      PAYMENT_PORTONE_API_SECRET: ${PAYMENT_PORTONE_API_SECRET}
      PAYMENT_PORTONE_CALLBACK_URL: ${PAYMENT_PORTONE_CALLBACK_URL}
      # 파일 업로드
      FILE_UPLOAD_DIRECTORY: ${FILE_UPLOAD_DIRECTORY}
    ports:
      - "8080:8080"
    volumes:
      - upload-data:/uploads
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build: ../frontend
    container_name: frontend
    ports:
      - "80:80"
    depends_on:
      - backend

volumes:
  dbdata:
  upload-data: